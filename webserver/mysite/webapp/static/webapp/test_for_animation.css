body {
  min-height: 100vh;
  margin: 0;
  display: grid;
  background: #1f2020;
}

div {
  transform-style: preserve-3d;
  box-sizing: border-box;
}

.globe {
  --r: 25;
  --u: 1vmin;
  --h: 2px;
  /* border: 1px solid; */
  border-radius: 50%;
  width: calc(var(--r) * var(--u) * 2);
  height: calc(var(--r) * var(--u) * 2);
  place-self: center;
  position: relative;
  /*
  background-image: linear-gradient(90deg, #fc33 50%, #cf33 50%);
  */
}

.line {
  position: absolute;
  height: var(--h);
  border: 1px solid;
  
  --d: calc(var(--r) * var(--dp));
  /* Replace pow/sqrt with simpler calc approximation or precompute */
  --w: calc(2 * var(--r) * var(--u)); /* placeholder, adjust if needed */
  
  width: var(--w);
  top: calc(50% - (var(--d) * var(--s) * var(--u)));
  left: calc(50% - var(--w) / 2);
  color: #aaa5;
}

.radius {
  height: var(--h);
  --w: calc(var(--r) * var(--u) * 2);
  top: 50%;
}

.globe {
  transform:
    rotateX(45deg)
    rotateY(45deg)
    rotateZ(15deg);
}

.h,
.v {
  --h: var(--w);
  border-radius: 100vmax;
  background-color: #3cf3;
  top: 0;
  left: 0;
  box-shadow: 0 0 1em 1em #0000;
}

.h {
  translate: 
    calc(var(--r) * var(--u) - var(--w) / 2)
    calc(var(--r) * var(--u) - var(--w) / 2)
    calc((var(--d) * var(--s) * var(--u)));
  --del: 2s;
  animation: flash linear var(--del) infinite;
  /* animation-delay canâ€™t use Sass math, use a static or CSS calc */
  animation-delay: calc(var(--c) * var(--del) / var(--t, 7));
}

/* Animation */
@keyframes flash {
  0%, 28% {
    color: #aaa3;
    background-color: #3cf3;
    box-shadow: 0 0 1em 1em #0000;
  }
  14% {
    color: #f003;
    background-color: #39FF1480;
    box-shadow: 0 0 1em 1em #39FF1430;
  }
}

@keyframes rotates {
  from {
    transform: rotateX(0) rotateY(0) rotateZ(0);
  }
  to {
    transform: rotateX(360deg) rotateY(720deg) rotateZ(360deg);
  }
}

.globe {
    /* animation: rotates 50s linear infinite; */
}
